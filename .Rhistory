library(ggplot2)
data <- data.frame(
Channel = c("Instagram", "Google Maps", "Email Newsletter", "In-store Posters"),
Revenue = c(4200, 3100, 1800, 950)
)
library(ggplot2)
weeks <- c("Week 1", "Week 2", "Week 3", "Week 4")
traffic <- c(180, 230, 210, 275)
data <- data.frame(Week = weeks, Customers = traffic)
ggplot(data, aes(x = Week, y = Customers)) +
geom_line(color = "forestgreen", size = 1.2) +
geom_point(color = "darkgreen", size = 3) +
labs(title = "Weekly Foot Traffic After Instagram Promotions",
x = "Week",
y = "Customer Count") +
theme_minimal()
ggplot(data, aes(x = reorder(Channel, Revenue), y = Revenue, fill = Channel)) +
geom_col(show.legend = FALSE) +
coord_flip() +
labs(title = "Campaign Performance by Channel",
x = "Marketing Channel",
y = "Revenue Generated ($)") +
theme_minimal()
library(ggplot2)
data <- data.frame(
Channel = c("Instagram", "Google Maps", "Email Newsletter", "In-store Posters"),
Revenue = c(4200, 3100, 1800, 950)
)
ggplot(data, aes(x = reorder(Channel, Revenue), y = Revenue, fill = Channel)) +
geom_col(show.legend = FALSE) +
coord_flip() +
labs(title = "Campaign Performance by Channel",
x = "Marketing Channel",
y = "Revenue Generated ($)") +
theme_minimal()
ggplot(data, aes(x = reorder(Channel, Revenue), y = Revenue, fill = Channel)) +
geom_col(show.legend = FALSE) +
coord_flip() +
labs(title = "Campaign Performance by Channel",
x = "Marketing Channel",
y = "Revenue Generated ($)") +
theme_minimal()
ggplot(data, aes(x = reorder(Channel, Revenue), y = Revenue, fill = Channel)) +
geom_col(show.legend = FALSE) +
coord_flip() +
labs(title = "Campaign Performance by Channel",
x = "Marketing Channel",
y = "Revenue Generated ($)") +
theme_minimal()
ggplot(data, aes(x = reorder(Channel, Revenue), y = Revenue, fill = Channel)) +
geom_col(show.legend = FALSE) +
coord_flip() +
labs(title = "Campaign Performance by Channel",
x = "Marketing Channel",
y = "Revenue Generated ($)") +
theme_minimal()
ggplot(data, aes(x = reorder(Channel, Revenue), y = Revenue, fill = Channel)) +
geom_col(show.legend = FALSE) +
coord_flip() +
labs(title = "Campaign Performance by Channel",
x = "Marketing Channel",
y = "Revenue Generated ($)") +
theme_minimal()
library(ggplot2)
weeks <- c("Week 1", "Week 2", "Week 3", "Week 4")
traffic <- c(180, 230, 210, 275)
data <- data.frame(Week = weeks, Customers = traffic)
ggplot(data, aes(x = Week, y = Customers)) +
geom_line(color = "forestgreen", size = 1.2) +
geom_point(color = "darkgreen", size = 3) +
labs(title = "Weekly Foot Traffic After Instagram Promotions",
x = "Week",
y = "Customer Count") +
theme_minimal()
ggplot(data, aes(x = Week, y = Customers)) +
geom_line(color = "forestgreen", size = 1.2) +
geom_point(color = "darkgreen", size = 3) +
labs(title = "Weekly Foot Traffic After Instagram Promotions",
x = "Week",
y = "Customer Count") +
theme_minimal()
ggplot(data, aes(x = Week, y = Customers)) +
geom_line(color = "forestgreen", size = 1.2) +
geom_point(color = "darkgreen", size = 3) +
labs(title = "Weekly Foot Traffic After Instagram Promotions",
x = "Week",
y = "Customer Count") +
theme_minimal()
ggplot(data, aes(x = Week, y = Customers)) +
geom_line(color = "forestgreen", size = 1.2) +
geom_point(color = "darkgreen", size = 3) +
labs(title = "Weekly Foot Traffic After Instagram Promotions",
x = "Week",
y = "Customer Count") +
theme_minimal()
ggplot(data, aes(x = Week, y = Customers)) +
geom_line(color = "forestgreen", size = 1.2) +
geom_point(color = "darkgreen", size = 3) +
labs(title = "Weekly Foot Traffic After Instagram Promotions",
x = "Week",
y = "Customer Count") +
theme_minimal()
::: {.columns}
rlang::last_trace()
library(ggplot2)
data <- data.frame(
Channel = c("Instagram", "Google Maps", "Email Newsletter", "In-store Posters"),
Revenue = c(4200, 3100, 1800, 950)
)
ggplot(data, aes(x = reorder(Channel, Revenue), y = Revenue, fill = Channel)) +
geom_col(show.legend = FALSE) +
coord_flip() +
labs(title = "Campaign Performance by Channel",
x = "Marketing Channel",
y = "Revenue Generated ($)") +
theme_minimal()
dput(data)
library(ggplot2)
# Your exact data
data <- structure(list(
Channel = c("Instagram", "Google Maps", "Email Newsletter", "In-store Posters"),
Revenue = c(4200, 3100, 1800, 950)),
class = "data.frame", row.names = c(NA, -4L))
# Plot with explicit data reference
ggplot(data, aes(x = reorder(.data$Channel, .data$Revenue),
y = .data$Revenue,
fill = .data$Channel)) +
geom_col(show.legend = FALSE) +
coord_flip() +
labs(title = "Campaign Performance by Channel",
x = "Marketing Channel",
y = "Revenue Generated ($)") +
theme_minimal() +
geom_text(aes(label = Revenue), hjust = -0.1, size = 3) +  # Add value labels
scale_y_continuous(expand = expansion(mult = c(0, 0.1)))    # Make space for labels
clear
clear()
